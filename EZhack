local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local aiming = false
local espData = {}
local fovRadius = 150
local smoothing = 5 -- Will be updated via slider


local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
gui.Name = "AimbotESP_GUI"

local frame = Instance.new("Frame", gui)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.Size = UDim2.new(0, 250, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Visible = true

local label = Instance.new("TextLabel", frame)
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 0)
label.Text = "Smoothing: 5"
label.TextColor3 = Color3.new(1, 1, 1)
label.BackgroundTransparency = 1

local slider = Instance.new("TextButton", frame)
slider.Size = UDim2.new(1, -20, 0, 20)
slider.Position = UDim2.new(0, 10, 0, 30)
slider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
slider.Text = ""

local dragging = false
slider.MouseButton1Down:Connect(function()
    dragging = true
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

RunService.RenderStepped:Connect(function()
    if dragging then
        local mouseX = UIS:GetMouseLocation().X
        local relX = math.clamp(mouseX - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
        local percentage = relX / slider.AbsoluteSize.X
        smoothing = math.floor(percentage * 10)
        label.Text = "Smoothing: " .. smoothing
    end
end)


UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        frame.Visible = not frame.Visible
    end
end)


local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 1
fovCircle.NumSides = 100
fovCircle.Filled = false
fovCircle.Transparency = 1
fovCircle.Color = Color3.fromRGB(255, 0, 0)
fovCircle.Visible = true
fovCircle.Radius = fovRadius


local function createESP(player)
    if espData[player] then return end

    local box = Drawing.new("Square")
    box.Color = Color3.fromRGB(255, 0, 0)
    box.Thickness = 2
    box.Filled = false
    box.Transparency = 1
    box.Visible = false

    local nameTag = Drawing.new("Text")
    nameTag.Size = 14
    nameTag.Color = Color3.new(1, 1, 1)
    nameTag.Center = true
    nameTag.Outline = true
    nameTag.Font = 2
    nameTag.Visible = false

    local healthText = Drawing.new("Text")
    healthText.Size = 14
    healthText.Color = Color3.new(1, 0, 0)
    healthText.Outline = true
    healthText.Font = 2
    healthText.Visible = false

    local distanceText = Drawing.new("Text")
    distanceText.Size = 14
    distanceText.Color = Color3.new(0, 1, 0)
    distanceText.Outline = true
    distanceText.Font = 2
    distanceText.Visible = false

    espData[player] = {
        Box = box,
        Name = nameTag,
        Health = healthText,
        Distance = distanceText
    }
end

local function removeESP(player)
    if espData[player] then
        for _, obj in pairs(espData[player]) do
            if obj.Remove then obj:Remove() end
        end
        espData[player] = nil
    end
end


local function getClosestTarget()
    local closestDist = math.huge
    local targetPart = nil
    local mousePos = UIS:GetMouseLocation()

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") and player.Character:FindFirstChildOfClass("Humanoid") then
            local head = player.Character.Head
            local hum = player.Character:FindFirstChildOfClass("Humanoid")
            if hum and hum.Health > 0 then
                local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    if dist < closestDist and dist <= fovRadius then
                        closestDist = dist
                        targetPart = head
                    end
                end
            end
        end
    end

    return targetPart
end

local function moveMouseTowards(target)
    local screenPos = Camera:WorldToViewportPoint(target.Position)
    local mousePos = UIS:GetMouseLocation()
    local dx = (screenPos.X - mousePos.X) / (smoothing == 0 and 0.1 or smoothing)
    local dy = (screenPos.Y - mousePos.Y) / (smoothing == 0 and 0.1 or smoothing)
    mousemoverel(dx, dy)
end


UIS.InputBegan:Connect(function(input, gp)
    if not gp and input.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming = true
    end
end)

UIS.InputEnded:Connect(function(input, gp)
    if not gp and input.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming = false
    end
end)


RunService.RenderStepped:Connect(function()
    fovCircle.Position = UIS:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Head") then
            local hrp = player.Character.HumanoidRootPart
            local head = player.Character.Head
            local hum = player.Character:FindFirstChildOfClass("Humanoid")
            if hum and hum.Health > 0 then
                createESP(player)
                local data = espData[player]
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    local scale = (Camera.CFrame.Position - hrp.Position).Magnitude / 25
                    local boxWidth = (head.Size.X + hrp.Size.X) / scale
                    local boxHeight = (head.Size.Y + hrp.Size.Y) / scale
                    data.Box.Size = Vector2.new(boxWidth, boxHeight)
                    data.Box.Position = Vector2.new(screenPos.X - boxWidth / 2, screenPos.Y - boxHeight / 2)
                    data.Box.Visible = true

                    data.Name.Text = player.Name
                    data.Name.Position = Vector2.new(screenPos.X, screenPos.Y - boxHeight / 2 - 15)
                    data.Name.Visible = true

                    data.Health.Text = "HP: " .. math.floor(hum.Health)
                    data.Health.Position = Vector2.new(screenPos.X + boxWidth / 2 + 15, screenPos.Y)
                    data.Health.Visible = true

                    local dist = (Camera.CFrame.Position - hrp.Position).Magnitude
                    data.Distance.Text = "Dist: " .. math.floor(dist)
                    data.Distance.Position = Vector2.new(screenPos.X - boxWidth / 2 - 70, screenPos.Y)
                    data.Distance.Visible = true
                else
                    data.Box.Visible = false
                    data.Name.Visible = false
                    data.Health.Visible = false
                    data.Distance.Visible = false
                end
            else
                removeESP(player)
            end
        else
            removeESP(player)
        end
    end

    if aiming then
        local target = getClosestTarget()
        if target then
            moveMouseTowards(target)
        end
    end
end)

Players.PlayerRemoving:Connect(removeESP)
